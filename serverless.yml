service: learnbosnian

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}

functions:
  hello:
    handler: backend/handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true

  getLesson:
    handler: backend/handler.getLesson
    events:
      - http:
          path: lessons/{lessonId}
          method: get
          cors: true

resources:
  Resources:
    # Add DynamoDB tables, S3 buckets, etc. here as needed
    LessonsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-lessons
        AttributeDefinitions:
          - AttributeName: lessonId
            AttributeType: S
        KeySchema:
          - AttributeName: lessonId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    # S3 bucket for hosting React frontend
    FrontendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: learn-bosnian-frontend-${self:provider.stage}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

    # Bucket policy to allow public read access
    FrontendBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref FrontendBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Sub '${FrontendBucket}/*'

  Outputs:
    FrontendBucketName:
      Description: Name of the S3 bucket for frontend hosting
      Value: !Ref FrontendBucket
      Export:
        Name: ${self:provider.stage}-frontend-bucket-name
    
    FrontendBucketWebsiteURL:
      Description: Website URL of the S3 bucket
      Value: !GetAtt FrontendBucket.WebsiteURL
      Export:
        Name: ${self:provider.stage}-frontend-website-url

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3001 